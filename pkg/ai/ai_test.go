package ai

import (
	"errors"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestAISummarizerInterface(t *testing.T) {
	// Test case 1: Successful summary generation
	mockAI := &MockAISummarizer{Summary: "Test summary", Err: nil}
	var summarizer AISummarizer = mockAI

	summary, err := summarizer.GenerateSummary("some text", "some prompt")
	assert.NoError(t, err)
	assert.Equal(t, "Test summary", summary)

	// Test case 2: Error during summary generation
	mockAI = &MockAISummarizer{Summary: "", Err: errors.New("AI error")}
	summarizer = mockAI

	summary, err = summarizer.GenerateSummary("some text", "some prompt")
	assert.Error(t, err)
	assert.Contains(t, err.Error(), "AI error")
	assert.Empty(t, summary)

	// Test case 3: PlaceholderAISummarizer
	placeholderAI := &PlaceholderAISummarizer{}
	summarizer = placeholderAI

	summary, err = summarizer.GenerateSummary("some text", "some prompt")
	assert.NoError(t, err)
	assert.Equal(t, "This is a placeholder summary generated by the AI agent.", summary)

	// Test case 4: PlaceholderAISummarizer returns an error
	placeholderAIWithError := &PlaceholderAISummarizer{Err: errors.New("placeholder AI error")}
	summarizer = placeholderAIWithError

	summary, err = summarizer.GenerateSummary("some text", "some prompt")
	assert.Error(t, err)
	assert.Contains(t, err.Error(), "placeholder AI error")
	assert.Empty(t, summary)
}
